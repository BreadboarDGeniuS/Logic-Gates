// Define pin mappings
const int inputPin1 = 15;  // Physical pin 15 = INPUT 1
const int inputPin2 = 16;  // Physical pin 16 = INPUT 2
const int inputPin3 = 0;   // Physical pin 0 = INPUT 3
const int ledInput1 = 1;   // Physical pin 1 = INPUT LED 1
const int ledInput2 = 2;   // Physical pin 2 = INPUT LED 2
const int ledInput3 = 3;   // Physical pin 3 = INPUT LED 3
const int outputPin1 = 9;  // Physical pin 9 = OUTPUT 1
const int outputPin2 = 8;  // Physical pin 8 = OUTPUT 2
const int ledOutput1 = 7;  // Physical pin 7 = OUTPUT LED 1
const int ledOutput2 = 6;  // Physical pin 6 = OUTPUT LED 2
const int gateLED = 5;     // Physical pin 5 = GATE LED


void setup() {
  // Set input pins as INPUT
  pinMode(inputPin1, INPUT);
  pinMode(inputPin2, INPUT);
  pinMode(inputPin3, INPUT);

  // Set LED pins for inputs as OUTPUT
  pinMode(ledInput1, OUTPUT);
  pinMode(ledInput2, OUTPUT);
  pinMode(ledInput3, OUTPUT);

  // Set logic output pins as OUTPUT
  pinMode(outputPin1, OUTPUT);
  pinMode(outputPin2, OUTPUT);

  // Set LED pins for outputs as OUTPUT
  pinMode(ledOutput1, OUTPUT);
  pinMode(ledOutput2, OUTPUT);

  // Set Logic Gate Symbol LED pin as OUTPUT
  pinMode(gateLED, OUTPUT);

  // Turn on the Logic Gate Symbol LED
  digitalWrite(gateLED, HIGH);
}

void loop() {
  // Read the input states
  int input1 = digitalRead(inputPin1);
  int input2 = digitalRead(inputPin2);
  int input3 = digitalRead(inputPin3);

  // Set the LEDs to reflect the input states
  digitalWrite(ledInput1, input1);
  digitalWrite(ledInput2, input2);
  digitalWrite(ledInput3, input3);

  // Calculate AND result
  int andResult = input1 & input2 & input3;

  // Calculate NAND result (inverted AND result)
  int nandResult = !andResult;

  // Set the logic outputs
  digitalWrite(outputPin1, andResult); // AND output
  digitalWrite(outputPin2, nandResult); // NAND output

  // Set the LEDs for outputs
  digitalWrite(ledOutput1, andResult); // LED for AND output
  digitalWrite(ledOutput2, nandResult); // LED for NAND output
}
